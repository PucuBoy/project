"use strict";(self.webpackChunkstory_explorer=self.webpackChunkstory_explorer||[]).push([[936],{115:(e,t,r)=>{r.d(t,{A:()=>s});const s={BASE_URL:"https://story-api.dicoding.dev/v1",VAPID_PUBLIC_KEY:"BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk",DEFAULT_MAP_CENTER:{lat:-6.2,lon:106.816666},MAP_OPTIONS:{DEFAULT_ZOOM:5,TILE_LAYER:{DEFAULT:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",SATELLITE:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"}}}},628:(e,t,r)=>{r.d(t,{A:()=>a}),r(115);const s="stories",o="offline-stories",n=()=>new Promise(((e,t)=>{const r=indexedDB.open("story-explorer-db",1);r.onerror=()=>{t(r.error)},r.onsuccess=()=>{e(r.result)},r.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains(s)||t.createObjectStore(s,{keyPath:"id"}).createIndex("createdAt","createdAt",{unique:!1}),t.objectStoreNames.contains(o)||t.createObjectStore(o,{keyPath:"id",autoIncrement:!0}).createIndex("timestamp","timestamp",{unique:!1})}})),a={async getStories(){try{const e=await n();return new Promise(((t,r)=>{const o=e.transaction(s,"readonly").objectStore(s).getAll();o.onsuccess=()=>t(o.result),o.onerror=()=>r(o.error)}))}catch(e){return console.error("Error getting stories:",e),[]}},async saveStories(e){try{const t=(await n()).transaction(s,"readwrite").objectStore(s);return await Promise.all(e.map((e=>new Promise(((r,s)=>{const o=t.put({...e,timestamp:(new Date).getTime()});o.onsuccess=()=>r(),o.onerror=()=>s(o.error)}))))),!0}catch(e){return console.error("Error saving stories:",e),!1}},async saveOfflineStory(e){try{const t=(await n()).transaction(o,"readwrite").objectStore(o);return new Promise(((r,s)=>{const o=t.add({...e,timestamp:(new Date).getTime(),synced:!1});o.onsuccess=()=>r(!0),o.onerror=()=>s(o.error)}))}catch(e){return console.error("Error saving offline story:",e),!1}},async getOfflineStories(){try{const e=(await n()).transaction(o,"readonly").objectStore(o);return new Promise(((t,r)=>{const s=e.getAll();s.onsuccess=()=>t(s.result),s.onerror=()=>r(s.error)}))}catch(e){return console.error("Error getting offline stories:",e),[]}},async deleteStory(e){try{const t=(await n()).transaction(s,"readwrite").objectStore(s);return new Promise(((r,s)=>{const o=t.delete(e);o.onsuccess=()=>r(!0),o.onerror=()=>s(o.error)}))}catch(e){return console.error("Error deleting story:",e),!1}},async clearOldStories(e=6048e5){try{const t=(await n()).transaction(s,"readwrite").objectStore(s).index("createdAt"),r=(new Date).getTime()-e,o=t.openCursor();return new Promise(((e,t)=>{o.onsuccess=t=>{const s=t.target.result;s?(s.value.timestamp<r&&s.delete(),s.continue()):e(!0)},o.onerror=()=>t(o.error)}))}catch(e){return console.error("Error clearing old stories:",e),!1}}}},933:(e,t,r)=>{r.d(t,{A:()=>o});var s=r(115);const o=class{static async getStories(e,{page:t=1,size:r=10,location:o=1}={}){return(await fetch(`${s.A.BASE_URL}/stories?page=${t}&size=${r}&location=${o}`,{headers:{Authorization:`Bearer ${e}`}})).json()}static async addStory(e,{description:t,photo:r,lat:o,lon:n}){const a=new FormData;return a.append("description",t),a.append("photo",r),o&&n&&(a.append("lat",o),a.append("lon",n)),(await fetch(`${s.A.BASE_URL}/stories`,{method:"POST",headers:{Authorization:`Bearer ${e}`},body:a})).json()}static async login(e){const t=await fetch(`${s.A.BASE_URL}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await t.json()}static async register(e,t,r){return(await fetch(`${s.A.BASE_URL}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:t,password:r})})).json()}static async getStoryDetail(e,t){try{const r=await fetch(`${s.A.API_URL}/stories/${t}`,{headers:{Authorization:`Bearer ${e}`}});return await r.json()}catch(e){return console.error("Error fetching story detail:",e),{error:!0,message:e.message}}}static async addGuestStory(e){try{const t=new FormData;t.append("description",e.description),t.append("photo",e.photo),e.lat&&t.append("lat",e.lat),e.lon&&t.append("lon",e.lon);const r=await fetch(`${s.A.API_URL}/stories/guest`,{method:"POST",body:t});return await r.json()}catch(e){return console.error("Error adding guest story:",e),{error:!0,message:e.message}}}static async subscribePushNotification(e,t){try{const r=await fetch(`${s.A.BASE_URL}/notifications/subscribe`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:t.endpoint,keys:{p256dh:t.keys.p256dh,auth:t.keys.auth}})});return await r.json()}catch(e){return console.error("Error subscribing to notifications:",e),{error:!0,message:e.message}}}static async unsubscribePushNotification(e,t){try{const r=await fetch(`${s.A.BASE_URL}/notifications/subscribe`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:t})});return await r.json()}catch(e){return console.error("Error unsubscribing from notifications:",e),{error:!0,message:e.message}}}static async syncOfflineStories(e,t){try{return(await Promise.allSettled(t.map((t=>this.addStory(e,t))))).map(((e,r)=>({story:t[r],success:"fulfilled"===e.status,response:"fulfilled"===e.status?e.value:e.reason})))}catch(e){return console.error("Error syncing offline stories:",e),{error:!0,message:e.message}}}static async registerPushSubscription(e,t){try{const r=await fetch(`${s.A.BASE_URL}/push-registration`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(t)});return await r.json()}catch(e){return console.error("Error registering push subscription:",e),{error:!0,message:e.message}}}static async checkConnectivity(){try{return(await fetch(`${s.A.BASE_URL}/ping`,{method:"HEAD"})).ok}catch{return!1}}static async retryFailedUploads(e,t){try{return(await Promise.allSettled(t.map((t=>this.addStory(e,t.data))))).map(((e,r)=>({originalUpload:t[r],success:"fulfilled"===e.status,response:"fulfilled"===e.status?e.value:e.reason})))}catch(e){return console.error("Error retrying failed uploads:",e),{error:!0,message:e.message}}}}},936:(e,t,r)=>{r.r(t),r.d(t,{default:()=>i});var s=r(933);const o=class{static parseActiveUrlWithCombiner(){const e=window.location.hash.slice(1).toLowerCase(),t=this._urlSplitter(e);return this._urlCombiner(t)}static parseActiveUrlWithoutCombiner(){const e=window.location.hash.slice(1).toLowerCase();return this._urlSplitter(e)}static _urlSplitter(e){const t=e.split("/");return{resource:t[1]||null,id:t[2]||null,verb:t[3]||null}}static _urlCombiner(e){return(e.resource?`/${e.resource}`:"/")+(e.id?"/:id":"")+(e.verb?`/${e.verb}`:"")}};var n=r(472),a=r(628);const i=class{constructor(){this._container=document.querySelector("#mainContent"),this._story=null}async render(){return'\n            <div class="detail-container">\n                <div id="loadingIndicator" class="loading-indicator">\n                    <i class="fas fa-spinner fa-spin"></i>\n                    Memuat cerita...\n                </div>\n                <div id="storyDetail" class="story-detail"></div>\n            </div>\n        '}async afterRender(){const e=o.parseActiveUrlWithoutCombiner();await this._fetchStoryDetail(e.id)}async _fetchStoryDetail(e){try{const t=n.A.getToken(),r=await s.A.getStoryDetail(t,e);if(r.error)throw new Error(r.message);this._story=r.story,await this._renderStoryDetail(),await this._saveToOffline()}catch(t){console.error("Error fetching story:",t),await this._loadFromOffline(e)}}async _renderStoryDetail(){const e=document.getElementById("storyDetail"),t=document.getElementById("loadingIndicator");this._story?(e.innerHTML=`\n            <article class="story-content">\n                <header class="story-header">\n                    <h2>${this._story.name}</h2>\n                    <div class="story-meta">\n                        <time datetime="${this._story.createdAt}">\n                            ${new Date(this._story.createdAt).toLocaleDateString("id-ID")}\n                        </time>\n                        <span class="location">\n                            <i class="fas fa-map-marker-alt"></i>\n                            ${this._story.location||"Lokasi tidak tersedia"}\n                        </span>\n                    </div>\n                </header>\n\n                <div class="story-media">\n                    <img src="${this._story.photoUrl}" \n                        alt="Foto cerita ${this._story.name}"\n                        class="story-image">\n                </div>\n\n                <div class="story-body">\n                    <p>${this._story.description}</p>\n                </div>\n\n                <footer class="story-footer">\n                    <button id="saveOffline" class="save-offline">\n                        <i class="fas fa-download"></i> Simpan Offline\n                    </button>\n                    <button onclick="window.history.back()" class="back-button">\n                        <i class="fas fa-arrow-left"></i> Kembali\n                    </button>\n                </footer>\n            </article>\n        `,t.style.display="none",this._initializeEventListeners()):e.innerHTML='\n                <div class="error-state">\n                    <i class="fas fa-exclamation-circle"></i>\n                    <p>Cerita tidak ditemukan</p>\n                    <a href="#/home" class="back-link">Kembali ke Beranda</a>\n                </div>\n            '}async _saveToOffline(){this._story&&await a.A.saveStories([this._story])}async _loadFromOffline(e){try{const t=await a.A.getStories();this._story=t.find((t=>t.id===e)),await this._renderStoryDetail()}catch(e){console.error("Error loading from offline:",e),this._story=null,await this._renderStoryDetail()}}_initializeEventListeners(){const e=document.getElementById("saveOffline");e&&e.addEventListener("click",(async()=>{try{await this._saveToOffline(),this._showFeedback("Cerita berhasil disimpan offline")}catch(e){this._showFeedback("Gagal menyimpan cerita offline",!0)}}))}_showFeedback(e,t=!1){const r=document.createElement("div");r.className="feedback-message "+(t?"error":"success"),r.textContent=e,this._container.appendChild(r),setTimeout((()=>r.remove()),3e3)}}}}]);