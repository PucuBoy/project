"use strict";(self.webpackChunkstory_explorer=self.webpackChunkstory_explorer||[]).push([[413],{115:(t,e,a)=>{a.d(e,{A:()=>i});const i={BASE_URL:"https://story-api.dicoding.dev/v1",VAPID_PUBLIC_KEY:"BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk",DEFAULT_MAP_CENTER:{lat:-6.2,lon:106.816666},MAP_OPTIONS:{DEFAULT_ZOOM:5,TILE_LAYER:{DEFAULT:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",SATELLITE:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"}}}},384:(t,e,a)=>{a.d(e,{A:()=>i});const i=class{constructor(t,e){this._apiService=t,this._auth=e}async getStories(t,e,a){const i=this._auth.getToken();return await this._apiService.getStories(i,{page:t,size:e,location:a})}async addStory(t){const e=this._auth.getToken();return await this._apiService.addStory(e,t)}async login(t,e){return await this._apiService.login({email:t,password:e})}async register(t){return await this._apiService.register(t)}setToken(t){this._auth.setToken(t)}removeToken(){this._auth.removeToken()}}},413:(t,e,a)=>{a.r(e),a.d(e,{default:()=>l});var i=a(933),s=a(472);const n=class{constructor(t){this.videoElement=t,this.stream=null,this.isActive=!1}async start(){try{return this.stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"},audio:!1}),this.videoElement.srcObject=this.stream,this.isActive=!0,new Promise((t=>{this.videoElement.onloadedmetadata=()=>{this.videoElement.play(),t()}}))}catch(t){throw console.error("Camera error:",t),new Error("Tidak dapat mengakses kamera")}}stop(){this.stream&&(this.stream.getTracks().forEach((t=>{t.stop()})),this.videoElement&&(this.videoElement.srcObject=null),this.stream=null,this.isActive=!1)}isStreamActive(){return this.isActive&&this.stream&&this.stream.active}async takePhoto(){if(!this.videoElement)return null;const t=document.createElement("canvas");return t.width=this.videoElement.videoWidth,t.height=this.videoElement.videoHeight,t.getContext("2d").drawImage(this.videoElement,0,0),new Promise((e=>{t.toBlob((t=>{e(t)}),"image/jpeg",.8)}))}};var o=a(115),r=a(384);const c=class{constructor(t,e){this._view=t,this._model=e}async submitStory(t,e,a){try{const i=await this._model.addStory({description:t,photo:e,lat:a.lat,lon:a.lng});if(!i.error)return{success:!0};throw new Error(i.message)}catch(t){return{success:!1,error:t.message||"Terjadi kesalahan"}}}},l=class{constructor(){this._map=null,this._camera=null,this._selectedLocation=null,this._model=new r.A(i.A,s.A),this._presenter=new c(this,this._model),this._handleNavigation=this._handleNavigation.bind(this)}async render(){return'\n            <div class="add-story" role="main">\n                <h1>Tambah Cerita Baru</h1>\n                <form id="addStoryForm" class="story-form">\n                    <div class="form-group">\n                        <label for="description" id="descriptionLabel">Ceritakan kisahmu</label>\n                        <textarea \n                            id="description" \n                            required \n                            aria-labelledby="descriptionLabel"\n                        ></textarea>\n                    </div>\n\n                    <div class="form-group">\n                        <label>Foto</label>\n                        <div class="camera-container">\n                            <video id="camera" autoplay playsinline></video>\n                            <canvas id="photoPreview" style="display: none;"></canvas>\n                            <div class="camera-controls">\n                                <button type="button" id="startCamera" class="camera-button">\n                                    <i class="fas fa-camera"></i> Buka Kamera\n                                </button>\n                                <button type="button" id="takePhoto" class="camera-button" disabled>\n                                    <i class="fas fa-camera-retro"></i> Ambil Foto\n                                </button>\n                                <button type="button" id="retakePhoto" class="camera-button" style="display: none;">\n                                    <i class="fas fa-redo"></i> Ambil Ulang\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="form-group">\n                        <label>Lokasi</label>\n                        <div id="locationMap" class="location-map"></div>\n                        <p id="selectedLocation" class="location-info">\n                            Klik pada peta untuk memilih lokasi\n                        </p>\n                    </div>\n\n                    <div class="form-actions">\n                        <button type="submit" id="submitStory">Bagikan Cerita</button>\n                        <a href="#/home" class="cancel-button">Batal</a>\n                    </div>\n                </form>\n            </div>\n        '}async afterRender(){await this._initializeMap(),await this._initializeCamera(),this._initializeEventListeners(),window.addEventListener("hashchange",this._handleNavigation)}async cleanup(){window.removeEventListener("hashchange",this._handleNavigation),this._camera&&(this._camera.stop(),this._camera=null)}_initializeMap(){try{if(!document.getElementById("locationMap"))return void console.warn("Map element not found");this._map=L.map("locationMap").setView([o.A.DEFAULT_MAP_CENTER.lat,o.A.DEFAULT_MAP_CENTER.lon],o.A.MAP_OPTIONS.DEFAULT_ZOOM),L.tileLayer(o.A.MAP_OPTIONS.TILE_LAYER.DEFAULT,{attribution:"Â© OpenStreetMap contributors"}).addTo(this._map);let t=null;this._map.on("click",(e=>{this._selectedLocation=e.latlng,t&&t.remove(),t=L.marker([e.latlng.lat,e.latlng.lng]).addTo(this._map),this._updateLocationInfo()})),setTimeout((()=>{this._map.invalidateSize()}),100)}catch(t){console.error("Failed to initialize map:",t),alert("Gagal memuat peta. Silakan muat ulang halaman.")}}_initializeCamera(){try{const t=document.getElementById("camera");if(!t)return void console.warn("Camera element not found");this._camera=new n(t)}catch(t){console.error("Failed to initialize camera:",t)}}_updateLocationInfo(){const t=document.getElementById("selectedLocation");this._selectedLocation&&(t.textContent=`Lokasi dipilih: ${this._selectedLocation.lat.toFixed(6)}, ${this._selectedLocation.lng.toFixed(6)}`)}_initializeEventListeners(){const t=document.getElementById("startCamera"),e=document.getElementById("takePhoto"),a=document.getElementById("retakePhoto"),i=document.getElementById("addStoryForm"),s=document.getElementById("camera"),n=document.getElementById("photoPreview");let o=null;t.addEventListener("click",(async()=>{try{await this._camera.start(),t.style.display="none",e.disabled=!1,s.style.display="block",n.style.display="none"}catch(t){alert("Tidak dapat mengakses kamera")}})),e.addEventListener("click",(async()=>{o=await this._camera.takePhoto();const t=URL.createObjectURL(o);n.style.display="block",s.style.display="none",e.style.display="none",a.style.display="block";const i=n.getContext("2d"),r=new Image;r.onload=()=>{n.width=r.width,n.height=r.height,i.drawImage(r,0,0)},r.src=t,this._camera.stop()})),a.addEventListener("click",(async()=>{await this._camera.start(),s.style.display="block",n.style.display="none",e.style.display="block",a.style.display="none",o=null})),i.addEventListener("submit",(async t=>{t.preventDefault();const e=document.getElementById("description").value;if(e.trim())if(this._selectedLocation)if(o)try{const t=document.createElement("div");t.className="loading-overlay",t.innerHTML='<div class="loading-spinner"></div>',document.body.appendChild(t);const a=await this._presenter.submitStory(e,o,this._selectedLocation);if(!a.success)throw new Error(a.error);alert("Cerita berhasil dibagikan!"),window.location.hash="#/home"}catch(t){console.error("Failed to add story:",t),alert(`Gagal menambahkan cerita: ${t.message}`)}finally{const t=document.querySelector(".loading-overlay");t&&t.remove()}else alert("Silakan ambil foto terlebih dahulu");else alert("Silakan pilih lokasi pada peta");else alert("Silakan isi deskripsi cerita")}))}_handleNavigation(){this._camera&&this._camera.isStreamActive()&&this._camera.stop()}}},933:(t,e,a)=>{a.d(e,{A:()=>s});var i=a(115);const s=class{static async getStories(t,{page:e=1,size:a=10,location:s=1}={}){return(await fetch(`${i.A.BASE_URL}/stories?page=${e}&size=${a}&location=${s}`,{headers:{Authorization:`Bearer ${t}`}})).json()}static async addStory(t,{description:e,photo:a,lat:s,lon:n}){const o=new FormData;return o.append("description",e),o.append("photo",a),s&&n&&(o.append("lat",s),o.append("lon",n)),(await fetch(`${i.A.BASE_URL}/stories`,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:o})).json()}static async login(t){const e=await fetch(`${i.A.BASE_URL}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await e.json()}static async register(t,e,a){return(await fetch(`${i.A.BASE_URL}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,email:e,password:a})})).json()}static async getStoryDetail(t,e){try{const a=await fetch(`${i.A.API_URL}/stories/${e}`,{headers:{Authorization:`Bearer ${t}`}});return await a.json()}catch(t){return console.error("Error fetching story detail:",t),{error:!0,message:t.message}}}static async addGuestStory(t){try{const e=new FormData;e.append("description",t.description),e.append("photo",t.photo),t.lat&&e.append("lat",t.lat),t.lon&&e.append("lon",t.lon);const a=await fetch(`${i.A.API_URL}/stories/guest`,{method:"POST",body:e});return await a.json()}catch(t){return console.error("Error adding guest story:",t),{error:!0,message:t.message}}}static async subscribePushNotification(t,e){try{const a=await fetch(`${i.A.BASE_URL}/notifications/subscribe`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:e.endpoint,keys:{p256dh:e.keys.p256dh,auth:e.keys.auth}})});return await a.json()}catch(t){return console.error("Error subscribing to notifications:",t),{error:!0,message:t.message}}}static async unsubscribePushNotification(t,e){try{const a=await fetch(`${i.A.BASE_URL}/notifications/subscribe`,{method:"DELETE",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:e})});return await a.json()}catch(t){return console.error("Error unsubscribing from notifications:",t),{error:!0,message:t.message}}}static async syncOfflineStories(t,e){try{return(await Promise.allSettled(e.map((e=>this.addStory(t,e))))).map(((t,a)=>({story:e[a],success:"fulfilled"===t.status,response:"fulfilled"===t.status?t.value:t.reason})))}catch(t){return console.error("Error syncing offline stories:",t),{error:!0,message:t.message}}}static async registerPushSubscription(t,e){try{const a=await fetch(`${i.A.BASE_URL}/push-registration`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)});return await a.json()}catch(t){return console.error("Error registering push subscription:",t),{error:!0,message:t.message}}}static async checkConnectivity(){try{return(await fetch(`${i.A.BASE_URL}/ping`,{method:"HEAD"})).ok}catch{return!1}}static async retryFailedUploads(t,e){try{return(await Promise.allSettled(e.map((e=>this.addStory(t,e.data))))).map(((t,a)=>({originalUpload:e[a],success:"fulfilled"===t.status,response:"fulfilled"===t.status?t.value:t.reason})))}catch(t){return console.error("Error retrying failed uploads:",t),{error:!0,message:t.message}}}}}}]);