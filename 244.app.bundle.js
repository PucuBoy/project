"use strict";(self.webpackChunkstory_explorer=self.webpackChunkstory_explorer||[]).push([[244],{110:(t,e,i)=>{i.d(e,{A:()=>s}),i(115);var a=i(933);const s=class{static async initialize(){try{if(!("Notification"in window))throw new Error("Browser tidak mendukung notifikasi");if(!("serviceWorker"in navigator))throw new Error("Browser tidak mendukung Service Worker");if(!("PushManager"in window))throw new Error("Browser tidak mendukung Push Notification");if("granted"!==await Notification.requestPermission())throw new Error("Izin notifikasi tidak diberikan");return await this.registerServiceWorker(),await this.setupPeriodicSync(),!0}catch(t){return console.error("Inisialisasi notifikasi gagal:",t),!1}}static async setupPeriodicSync(){try{const t=await navigator.serviceWorker.ready;"periodicSync"in t&&"granted"===(await navigator.permissions.query({name:"periodic-background-sync"})).state&&await t.periodicSync.register("check-stories",{minInterval:864e5})}catch(t){console.error("Failed to setup periodic sync:",t)}}static async registerServiceWorker(){try{if("serviceWorker"in navigator)return await navigator.serviceWorker.register("/sw.js");throw new Error("Service Worker not supported")}catch(t){throw console.error("Failed to register service worker:",t),t}}static async subscribeToPush(t){try{const e=await navigator.serviceWorker.ready;let i=await e.pushManager.getSubscription();return i||(i=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:this._urlBase64ToUint8Array("BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk")})),await a.A.subscribePushNotification(t,{endpoint:i.endpoint,keys:{p256dh:this._arrayBufferToBase64(i.getKey("p256dh")),auth:this._arrayBufferToBase64(i.getKey("auth"))}}),i}catch(t){throw console.error("Failed to subscribe to push:",t),t}}static _arrayBufferToBase64(t){const e=String.fromCharCode.apply(null,new Uint8Array(t));return btoa(e)}static _urlBase64ToUint8Array(t){const e=(t+"=".repeat((4-t.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),i=window.atob(e),a=new Uint8Array(i.length);for(let t=0;t<i.length;++t)a[t]=i.charCodeAt(t);return a}static async showNotification(t,e={}){try{const i=await navigator.serviceWorker.ready,a={icon:"/icons/icon-192x192.png",badge:"/icons/icon-72x72.png",vibrate:[100,50,100],...e,data:{dateOfArrival:Date.now(),...e.data}};await i.showNotification(t,a)}catch(t){console.error("Failed to show notification:",t)}}static async unsubscribeFromPush(t){try{const e=await navigator.serviceWorker.ready,i=await e.pushManager.getSubscription();return!!i&&(await a.A.unsubscribePushNotification(t,i.endpoint),await i.unsubscribe(),!0)}catch(t){throw console.error("Failed to unsubscribe from push:",t),t}}}},115:(t,e,i)=>{i.d(e,{A:()=>a});const a={BASE_URL:"https://story-api.dicoding.dev/v1",VAPID_PUBLIC_KEY:"BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk",DEFAULT_MAP_CENTER:{lat:-6.2,lon:106.816666},MAP_OPTIONS:{DEFAULT_ZOOM:5,TILE_LAYER:{DEFAULT:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",SATELLITE:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"}}}},244:(t,e,i)=>{i.r(e),i.d(e,{default:()=>d});var a=i(384);const s=class{constructor(t,e){this._view=t,this._model=e,this._page=1,this._loading=!1,this._hasMore=!0}async loadInitialStories(){this._page=1,this._hasMore=!0,await this.loadStories()}async loadStories(){if(!this._loading&&this._hasMore)try{this._loading=!0,this._view.showLoading(!0);const t=await this._model.getStories(this._page,10,1);if(!t||t.error)throw new Error(t?.message||"Failed to load stories");t.listStory&&t.listStory.length>0?(this._view.renderStories(t.listStory),this._page+=1):(this._hasMore=!1,this._view.showEndMessage(!0))}catch(t){console.error("Failed to load stories:",t)}finally{this._loading=!1,this._view.showLoading(!1)}}handleScroll({scrollTop:t,scrollHeight:e,clientHeight:i}){t+i>=e-5&&this.loadStories()}logout(){this._model.removeToken(),window.location.hash="#/login"}};var n=i(933),r=i(472),o=i(115),c=i(110);const l=class{constructor(){this._initialized=!1,this._notificationButton=null,this._initializeUI(),this._setupPushListener()}_setupPushListener(){"serviceWorker"in navigator&&navigator.serviceWorker.addEventListener("message",(t=>{"STORY_CREATED"===t.data.type&&(window.dispatchEvent(new CustomEvent("story-created")),this._showFeedback("Story baru telah ditambahkan"))}))}async _initializeUI(){if("#/"!==window.location.hash&&"#/home"!==window.location.hash)return;const t=document.getElementById("notificationToggle");if(t)this._notificationButton=t;else{const t=document.querySelector(".stories-header nav");t&&(this._notificationButton=document.createElement("button"),this._notificationButton.id="notificationToggle",this._notificationButton.className="nav-link notification-toggle",t.insertBefore(this._notificationButton,t.lastElementChild))}this._updateButtonState(),this._attachEventListeners(),await this._checkNotificationStatus()}_attachEventListeners(){this._notificationButton&&this._notificationButton.addEventListener("click",(async()=>{try{const t=r.A.getToken();if(!t)throw new Error("Silakan login terlebih dahulu");this._initialized?(await c.A.unsubscribeFromPush(t),this._initialized=!1):(await c.A.initialize(),await c.A.subscribeToPush(t),this._initialized=!0),this._updateButtonState(),this._showFeedback(this._initialized?"Notifikasi diaktifkan":"Notifikasi dinonaktifkan")}catch(t){console.error("Notification toggle failed:",t),this._showFeedback(t.message,!0)}}))}async _checkNotificationStatus(){try{const t=await navigator.serviceWorker.ready,e=await t.pushManager.getSubscription();this._initialized=!!e,this._updateButtonState()}catch(t){console.error("Error checking notification status:",t)}}_showFeedback(t,e=!1){const i=document.createElement("div");i.className="notification-feedback "+(e?"error":"success"),i.textContent=t,document.body.appendChild(i),setTimeout((()=>i.remove()),3e3)}_updateButtonState(){this._notificationButton&&(Notification.permission,r.A.isLoggedIn()?(this._notificationButton.style.display="block",this._notificationButton.innerHTML=`\n            <i class="fas fa-bell${this._initialized?"":"-slash"}" aria-label="${this._initialized?"Nonaktifkan":"Aktifkan"} Notifikasi"></i>\n        `,this._notificationButton.title=(this._initialized?"Nonaktifkan":"Aktifkan")+" Notifikasi",this._notificationButton.classList.toggle("active",this._initialized)):this._notificationButton.style.display="none")}},d=class{constructor(){this._model=new a.A(n.A,r.A),this._presenter=new s(this,this._model),this._map=null,this._markers=[],this._notificationManager=null}async render(){return'\n            <div class="stories">\n                <header class="stories-header">\n                    <h1>Story Explorer</h1>\n                    <nav>\n                        <button id="logoutBtn" class="nav-link" aria-label="Logout">\n                            <i class="fas fa-sign-out-alt"></i> Logout\n                        </button>\n                    </nav>\n                </header>\n                \n                <div id="map" class="story-map" role="application" aria-label="Peta lokasi cerita"></div>\n                \n                <div class="story-container">\n                    <div id="storyList" class="story-list" role="list"></div>\n                    <div id="loading" class="loading-spinner" style="display: none">\n                        <span class="sr-only">Memuat cerita...</span>\n                    </div>\n                    <div id="endMessage" class="end-message" style="display: none">\n                        <p>Tidak ada cerita lagi</p>\n                    </div>\n                </div>\n\n                <a href="#/add" class="fab" aria-label="Tambah cerita baru">\n                    <i class="fas fa-plus"></i>\n                </a>\n            </div>\n        '}async afterRender(){try{await this._initializeMap(),this._initializeEventListeners(),await this._presenter.loadInitialStories(),this._notificationManager||(this._notificationManager=new l),window.addEventListener("story-created",(async()=>{await this._presenter.loadInitialStories()}))}catch(t){console.error("Error in afterRender:",t),alert("Terjadi kesalahan saat memuat halaman")}}async _initializeMap(){if(!document.getElementById("map"))return;this._map=L.map("map").setView([o.A.DEFAULT_MAP_CENTER.lat,o.A.DEFAULT_MAP_CENTER.lon],o.A.MAP_OPTIONS.DEFAULT_ZOOM);const t=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors"}),e={Street:t,Satellite:L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"© Esri"}),Topographic:L.tileLayer("https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",{attribution:"© OpenTopoMap contributors"})};t.addTo(this._map),L.control.layers(e).addTo(this._map),setTimeout((()=>this._map.invalidateSize()),100)}_initializeEventListeners(){const t=document.getElementById("logoutBtn");t&&t.addEventListener("click",(()=>this._presenter.logout())),window.addEventListener("scroll",(()=>{const{scrollTop:t,scrollHeight:e,clientHeight:i}=document.documentElement;this._presenter.handleScroll({scrollTop:t,scrollHeight:e,clientHeight:i})}))}showLoading(t){const e=document.getElementById("loading");e&&(e.style.display=t?"block":"none")}showEndMessage(t){const e=document.getElementById("endMessage");e&&(e.style.display=t?"block":"none")}renderStories(t){const e=document.getElementById("storyList");e&&t.forEach((t=>{const i=this._createStoryElement(t);i&&(e.appendChild(i),t.lat&&t.lon&&this._addMarker(t))}))}_createStoryElement(t){const e=document.createElement("article");return e.className="story-item",e.setAttribute("role","article"),e.dataset.storyId=t.id,e.innerHTML=`\n            <img src="${t.photoUrl}" \n                alt="Story image: ${t.description.slice(0,50)}..." \n                class="story-image">\n            <div class="story-content">\n                <h2>${t.name}</h2>\n                <p>${t.description}</p>\n                <time datetime="${t.createdAt}" aria-label="Posted on">\n                    ${new Date(t.createdAt).toLocaleDateString("id-ID")}\n                </time>\n            </div>\n        `,e.addEventListener("click",(()=>this._handleStoryClick(e))),e}_handleStoryClick(t){if(!document.querySelector(".overlay")){const e=document.createElement("div");e.className="overlay",document.body.appendChild(e),e.addEventListener("click",(()=>this._handleOverlayClick(e,t))),setTimeout((()=>e.classList.add("active")),0)}document.startViewTransition?document.startViewTransition((()=>{t.classList.add("expanded")})):t.classList.add("expanded")}_handleOverlayClick(t,e){document.startViewTransition?document.startViewTransition((()=>{e.classList.remove("expanded"),t.classList.remove("active"),setTimeout((()=>t.remove()),300)})):(e.classList.remove("expanded"),t.classList.remove("active"),setTimeout((()=>t.remove()),300))}_addMarker(t){const e=L.marker([t.lat,t.lon]).bindPopup(`\n                <div class="map-popup">\n                    <h3>${t.name}</h3>\n                    <img src="${t.photoUrl}" alt="Foto dari ${t.name}">\n                    <p>${t.description}</p>\n                </div>\n            `);e.addTo(this._map),this._markers.push(e)}async cleanup(){window.removeEventListener("scroll",this._handleScroll),this._markers&&(this._markers.forEach((t=>t.remove())),this._markers=[]),this._map&&(this._map.remove(),this._map=null),this._notificationManager&&(this._notificationManager.cleanup(),this._notificationManager=null)}}},384:(t,e,i)=>{i.d(e,{A:()=>a});const a=class{constructor(t,e){this._apiService=t,this._auth=e}async getStories(t,e,i){const a=this._auth.getToken();return await this._apiService.getStories(a,{page:t,size:e,location:i})}async addStory(t){const e=this._auth.getToken();return await this._apiService.addStory(e,t)}async login(t,e){return await this._apiService.login({email:t,password:e})}async register(t){return await this._apiService.register(t)}setToken(t){this._auth.setToken(t)}removeToken(){this._auth.removeToken()}}},933:(t,e,i)=>{i.d(e,{A:()=>s});var a=i(115);const s=class{static async getStories(t,{page:e=1,size:i=10,location:s=1}={}){return(await fetch(`${a.A.BASE_URL}/stories?page=${e}&size=${i}&location=${s}`,{headers:{Authorization:`Bearer ${t}`}})).json()}static async addStory(t,{description:e,photo:i,lat:s,lon:n}){const r=new FormData;return r.append("description",e),r.append("photo",i),s&&n&&(r.append("lat",s),r.append("lon",n)),(await fetch(`${a.A.BASE_URL}/stories`,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:r})).json()}static async login(t){const e=await fetch(`${a.A.BASE_URL}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await e.json()}static async register(t,e,i){return(await fetch(`${a.A.BASE_URL}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,email:e,password:i})})).json()}static async getStoryDetail(t,e){try{const i=await fetch(`${a.A.API_URL}/stories/${e}`,{headers:{Authorization:`Bearer ${t}`}});return await i.json()}catch(t){return console.error("Error fetching story detail:",t),{error:!0,message:t.message}}}static async addGuestStory(t){try{const e=new FormData;e.append("description",t.description),e.append("photo",t.photo),t.lat&&e.append("lat",t.lat),t.lon&&e.append("lon",t.lon);const i=await fetch(`${a.A.API_URL}/stories/guest`,{method:"POST",body:e});return await i.json()}catch(t){return console.error("Error adding guest story:",t),{error:!0,message:t.message}}}static async subscribePushNotification(t,e){try{const i=await fetch(`${a.A.BASE_URL}/notifications/subscribe`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:e.endpoint,keys:{p256dh:e.keys.p256dh,auth:e.keys.auth}})});return await i.json()}catch(t){return console.error("Error subscribing to notifications:",t),{error:!0,message:t.message}}}static async unsubscribePushNotification(t,e){try{const i=await fetch(`${a.A.BASE_URL}/notifications/subscribe`,{method:"DELETE",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:e})});return await i.json()}catch(t){return console.error("Error unsubscribing from notifications:",t),{error:!0,message:t.message}}}static async syncOfflineStories(t,e){try{return(await Promise.allSettled(e.map((e=>this.addStory(t,e))))).map(((t,i)=>({story:e[i],success:"fulfilled"===t.status,response:"fulfilled"===t.status?t.value:t.reason})))}catch(t){return console.error("Error syncing offline stories:",t),{error:!0,message:t.message}}}static async registerPushSubscription(t,e){try{const i=await fetch(`${a.A.BASE_URL}/push-registration`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)});return await i.json()}catch(t){return console.error("Error registering push subscription:",t),{error:!0,message:t.message}}}static async checkConnectivity(){try{return(await fetch(`${a.A.BASE_URL}/ping`,{method:"HEAD"})).ok}catch{return!1}}static async retryFailedUploads(t,e){try{return(await Promise.allSettled(e.map((e=>this.addStory(t,e.data))))).map(((t,i)=>({originalUpload:e[i],success:"fulfilled"===t.status,response:"fulfilled"===t.status?t.value:t.reason})))}catch(t){return console.error("Error retrying failed uploads:",t),{error:!0,message:t.message}}}}}}]);